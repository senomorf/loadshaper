{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Loadshaper Helm Chart Values Schema",
  "description": "Schema for validating loadshaper chart values",
  "required": ["image", "config"],
  "properties": {
    "replicaCount": {
      "type": "integer",
      "minimum": 1,
      "maximum": 10,
      "description": "Number of replicas. Note: >1 requires ReadWriteMany PVC or separate PVCs per replica"
    },
    "image": {
      "type": "object",
      "required": ["repository"],
      "properties": {
        "repository": {
          "type": "string",
          "pattern": "^[a-z0-9]+(\\.[a-z0-9-]+)*(\\/[a-z0-9-_]+)*$",
          "description": "Container image repository"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "Never", "IfNotPresent"],
          "description": "Image pull policy"
        },
        "tag": {
          "type": "string",
          "description": "Image tag"
        }
      }
    },
    "imagePullSecrets": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    },
    "nameOverride": {
      "type": "string",
      "maxLength": 63
    },
    "fullnameOverride": {
      "type": "string",
      "maxLength": 63
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "annotations": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "automount": {
          "type": "boolean",
          "description": "Whether to automount service account token"
        }
      }
    },
    "podAnnotations": {
      "type": "object"
    },
    "podSecurityContext": {
      "type": "object",
      "properties": {
        "fsGroup": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        },
        "fsGroupChangePolicy": {
          "type": "string",
          "enum": ["Always", "OnRootMismatch"]
        }
      }
    },
    "securityContext": {
      "type": "object",
      "properties": {
        "capabilities": {
          "type": "object",
          "properties": {
            "drop": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        },
        "runAsGroup": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        },
        "seccompProfile": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["RuntimeDefault", "Unconfined", "Localhost"]
            }
          }
        }
      }
    },
    "security": {
      "type": "object",
      "properties": {
        "procHostMountEnabled": {
          "type": "boolean",
          "description": "Enable host /proc mount (reduces security)"
        }
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"]
        },
        "metrics": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          }
        },
        "annotations": {
          "type": "object"
        }
      }
    },
    "config": {
      "type": "object",
      "required": ["CPU_P95_SETPOINT", "MEM_TARGET_PCT", "NET_TARGET_PCT"],
      "properties": {
        "CPU_P95_TARGET_MIN": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$",
          "description": "CPU P95 target minimum percentage (20.0-95.0)"
        },
        "CPU_P95_TARGET_MAX": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$",
          "description": "CPU P95 target maximum percentage (20.0-95.0)"
        },
        "CPU_P95_SETPOINT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$",
          "description": "CPU P95 setpoint percentage - Oracle reclamation target (20.0-95.0)"
        },
        "CPU_P95_EXCEEDANCE_TARGET": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$",
          "description": "CPU P95 exceedance budget percentage (1.0-20.0)"
        },
        "CPU_P95_BASELINE_INTENSITY": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$",
          "description": "CPU P95 baseline intensity percentage (20.0-50.0)"
        },
        "CPU_P95_HIGH_INTENSITY": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$",
          "description": "CPU P95 high intensity percentage (30.0-95.0)"
        },
        "MEM_TARGET_PCT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$",
          "description": "Memory target percentage (0.1-99.0)"
        },
        "NET_TARGET_PCT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$",
          "description": "Network target percentage (0.1-99.0)"
        },
        "CPU_STOP_PCT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "MEM_STOP_PCT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "NET_STOP_PCT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "CONTROL_PERIOD_SEC": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "AVG_WINDOW_SEC": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "HYSTERESIS_PCT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "LOAD_THRESHOLD": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "LOAD_RESUME_THRESHOLD": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "LOAD_CHECK_ENABLED": {
          "type": "string",
          "enum": ["true", "false"]
        },
        "JITTER_PCT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "JITTER_PERIOD_SEC": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "MEM_MIN_FREE_MB": {
          "type": "string",
          "pattern": "^[0-9]+$"
        },
        "MEM_STEP_MB": {
          "type": "string",
          "pattern": "^[0-9]+$"
        },
        "NET_MODE": {
          "type": "string",
          "enum": ["client", "server"]
        },
        "NET_PEERS": {
          "type": "string",
          "description": "Comma-separated list of peer IPs/hostnames"
        },
        "NET_PORT": {
          "type": "string",
          "pattern": "^[0-9]+$",
          "description": "Network port (1-65535)"
        },
        "NET_BURST_SEC": {
          "type": "string",
          "pattern": "^[0-9]+$"
        },
        "NET_IDLE_SEC": {
          "type": "string",
          "pattern": "^[0-9]+$"
        },
        "NET_PROTOCOL": {
          "type": "string",
          "enum": ["udp", "tcp"],
          "description": "Network protocol for testing"
        },
        "NET_SENSE_MODE": {
          "type": "string",
          "enum": ["container", "host"],
          "description": "Network sensing mode"
        },
        "NET_IFACE": {
          "type": "string",
          "description": "Network interface for host mode"
        },
        "NET_IFACE_INNER": {
          "type": "string",
          "description": "Network interface for container mode"
        },
        "NET_LINK_MBIT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "NET_MIN_RATE_MBIT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "NET_MAX_RATE_MBIT": {
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?)$"
        },
        "HEALTH_ENABLED": {
          "type": "string",
          "enum": ["true", "false"]
        },
        "HEALTH_HOST": {
          "type": "string",
          "format": "hostname"
        },
        "HEALTH_PORT": {
          "type": "string",
          "pattern": "^[0-9]+$"
        },
        "extra": {
          "type": "object",
          "description": "Additional configuration key-value pairs"
        }
      }
    },
    "env": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "livenessProbe": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "minimum": 0,
          "maximum": 300
        },
        "periodSeconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 300
        },
        "timeoutSeconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 300
        },
        "failureThreshold": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10
        }
      }
    },
    "readinessProbe": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "minimum": 0,
          "maximum": 300
        },
        "periodSeconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 300
        },
        "timeoutSeconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 300
        },
        "failureThreshold": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10
        }
      }
    },
    "startupProbe": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "minimum": 0,
          "maximum": 300
        },
        "periodSeconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 300
        },
        "timeoutSeconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 300
        },
        "failureThreshold": {
          "type": "integer",
          "minimum": 1,
          "maximum": 30
        }
      }
    },
    "resources": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        }
      }
    },
    "persistence": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["ReadWriteOnce", "ReadOnlyMany", "ReadWriteMany"]
          }
        },
        "size": {
          "type": "string",
          "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|k|M|G|T|P|E)?$"
        },
        "annotations": {
          "type": "object"
        }
      }
    },
    "networkPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "allowDNS": {
          "type": "boolean"
        },
        "allowPeersFromSameApp": {
          "type": "boolean"
        },
        "ingress": {
          "type": "array"
        },
        "egress": {
          "type": "array"
        },
        "extraEgress": {
          "type": "array"
        }
      }
    },
    "serviceMonitor": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "labels": {
          "type": "object"
        },
        "annotations": {
          "type": "object"
        },
        "interval": {
          "type": "string",
          "pattern": "^[0-9]+[smhd]?$"
        },
        "scrapeTimeout": {
          "type": "string",
          "pattern": "^[0-9]+[smhd]?$"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "podDisruptionBudget": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "minAvailable": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "type": "string",
              "pattern": "^[0-9]+%$"
            }
          ]
        },
        "maxUnavailable": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "type": "string",
              "pattern": "^[0-9]+%$"
            }
          ]
        }
      }
    },
    "nodeSelector": {
      "type": "object"
    },
    "tolerations": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "affinity": {
      "type": "object"
    },
    "topologySpreadConstraints": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "priorityClassName": {
      "type": "string"
    },
    "volumes": {
      "type": "array"
    },
    "volumeMounts": {
      "type": "array"
    }
  }
}