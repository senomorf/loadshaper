version: "3.9"

# Default configuration optimized for VM.Standard.E2.1.Micro (1/8 OCPU, 1GB RAM, 50 Mbps external)
# For A1.Flex shapes, consider these overrides:
# - CPU_TARGET_PCT=35 (more CPU available)
# - MEM_TARGET_PCT=40 (memory reclamation applies)
# - NET_TARGET_PCT=25 (1 Gbps per vCPU available)
# - NET_LINK_MBIT=1000 (or higher for multi-vCPU)

services:
  loadshaper:
    build: .
    container_name: loadshaper
    restart: ${RESTART_POLICY:-always}
    ports:
      - "${HEALTH_PORT:-8080}:${HEALTH_PORT:-8080}"   # health check endpoints
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${HEALTH_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    environment:
      # === Targets (conservative defaults for E2.1.Micro) ===
      CPU_TARGET_PCT: "${CPU_TARGET_PCT:-25}"         # target average CPU (system-wide)
      MEM_TARGET_PCT: "${MEM_TARGET_PCT:-0}"          # target RAM used (EXCLUDING cache/buffers) - disabled for E2 (1GB RAM)
      NET_TARGET_PCT: "${NET_TARGET_PCT:-15}"         # target NIC utilization % (conservative for 50 Mbps external)

      # === Safety stop thresholds (conservative for shared tenancy) ===
      CPU_STOP_PCT: "${CPU_STOP_PCT:-45}"             # lower for E2 shared tenancy
      MEM_STOP_PCT: "${MEM_STOP_PCT:-80}"             # safe when MEM targeting disabled - system can use cache/buffers freely
      NET_STOP_PCT: "${NET_STOP_PCT:-40}"             # conservative for external bandwidth

      # === Control behavior ===
      CONTROL_PERIOD_SEC: "${CONTROL_PERIOD_SEC:-5}"
      AVG_WINDOW_SEC: "${AVG_WINDOW_SEC:-300}"
      HYSTERESIS_PCT: "${HYSTERESIS_PCT:-5}"
      JITTER_PCT: "${JITTER_PCT:-15}"
      JITTER_PERIOD_SEC: "${JITTER_PERIOD_SEC:-5}"

      # === Memory safety ===
      MEM_MIN_FREE_MB: "${MEM_MIN_FREE_MB:-512}"
      MEM_STEP_MB: "${MEM_STEP_MB:-64}"

      # === Network shaping (no host net; unprivileged port) ===
      NET_MODE: "${NET_MODE:-client}"                 # off|client
      NET_PROTOCOL: "${NET_PROTOCOL:-udp}"            # udp (lower CPU) | tcp
      NET_PEERS: "${NET_PEERS:-10.0.0.2,10.0.0.3}"    # other VMs
      NET_PORT: "${NET_PORT:-15201}"                  # iperf3 port on peers
      NET_BURST_SEC: "${NET_BURST_SEC:-10}"           # client burst duration
      NET_IDLE_SEC: "${NET_IDLE_SEC:-10}"             # idle between bursts

      # Which host NIC to measure (for utilization %) and its speed
      NET_SENSE_MODE: "${NET_SENSE_MODE:-container}"  # container|host (use container for rootless)
      NET_IFACE_INNER: "${NET_IFACE_INNER:-eth0}"     # container NIC name to read in /proc/net/dev
      NET_LINK_MBIT: "${NET_LINK_MBIT:-1000}"         # fallback link speed if /sys speed is unknown

      # Limits for the controller -> client sending rate (Mbps)
      NET_MIN_RATE_MBIT: "${NET_MIN_RATE_MBIT:-1}"
      NET_MAX_RATE_MBIT: "${NET_MAX_RATE_MBIT:-800}"  # cap below link speed for safety

      # === Health check server ===
      HEALTH_ENABLED: "${HEALTH_ENABLED:-true}"       # enable HTTP health endpoints
      HEALTH_PORT: "${HEALTH_PORT:-8080}"             # port for /health and /metrics endpoints

  # iperf3 receiver on an unprivileged port; exposed for peers to hit
  iperf3:
    image: networkstatic/iperf3:latest
    container_name: iperf3-server
    command: ["-s", "-p", "${NET_PORT:-15201}"]
    restart: ${RESTART_POLICY:-always}
    ports:
      - "${NET_PORT:-15201}:${NET_PORT:-15201}/tcp"
      - "${NET_PORT:-15201}:${NET_PORT:-15201}/udp"
